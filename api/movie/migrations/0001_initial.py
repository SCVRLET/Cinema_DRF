# Generated by Django 4.0.3 on 2022-04-03 20:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название')),
                ('synopsis', models.TextField(max_length=1000, verbose_name='Синопсис')),
                ('budget_in_dollars', models.PositiveIntegerField(verbose_name='Бюджет (в долларах)')),
                ('box_office_in_dollars', models.PositiveIntegerField(blank=True, verbose_name='Сборы (в долларах)')),
                ('world_premier', models.DateField(verbose_name='Мировая премьера')),
                ('duration_in_minutes', models.PositiveIntegerField(verbose_name='Длительность (в минутах)')),
                ('certificate', models.CharField(max_length=3, verbose_name='Возрастное ограничение')),
                ('countries', models.CharField(max_length=150, verbose_name='Страны')),
                ('tagline', models.CharField(blank=True, max_length=70, verbose_name='Слоган')),
            ],
        ),
        migrations.CreateModel(
            name='MovieGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=150, verbose_name='Отчество')),
                ('date_of_birth', models.DateField()),
                ('place_of_birth', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Serial',
            fields=[
                ('movie_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='movie.movie')),
                ('total_episodes_count', models.PositiveIntegerField(verbose_name='Всего серий')),
                ('total_seasons_count', models.PositiveIntegerField(verbose_name='Всего сезонов')),
                ('last_season_date', models.DateField(verbose_name='Дата выхода последнего сезона')),
                ('average_episode_duration_in_minutes', models.PositiveIntegerField(verbose_name='Средняя продолжительность одной серии (в минутах)')),
            ],
            bases=('movie.movie', models.Model),
        ),
        migrations.AddField(
            model_name='movie',
            name='actors',
            field=models.ManyToManyField(related_name='films_as_actor', to='movie.person', verbose_name='актеры'),
        ),
        migrations.AddField(
            model_name='movie',
            name='composers',
            field=models.ManyToManyField(related_name='films_as_composer', to='movie.person', verbose_name='Композитор'),
        ),
        migrations.AddField(
            model_name='movie',
            name='directors',
            field=models.ManyToManyField(related_name='films_as_director', to='movie.person', verbose_name='Режиссер'),
        ),
        migrations.AddField(
            model_name='movie',
            name='genres',
            field=models.ManyToManyField(related_name='films_with_genre', to='movie.moviegenre', verbose_name='Жанр'),
        ),
        migrations.AddField(
            model_name='movie',
            name='operators',
            field=models.ManyToManyField(related_name='films_as_operator', to='movie.person', verbose_name='Оператор'),
        ),
        migrations.AddField(
            model_name='movie',
            name='scenarists',
            field=models.ManyToManyField(related_name='films_as_scenarist', to='movie.person', verbose_name='Сценарист'),
        ),
    ]
